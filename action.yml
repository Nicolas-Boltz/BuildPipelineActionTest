name: 'Palladio Build Pipeline'
description: 'Build of Palladio Project'
inputs:
  build-repository:  # id of input
    description: 'Repository to build'
    required: true
    default:  ${{ github.repository }}
  use-display-output:  # id of input
    description: 'If display output is needed for ui tesing'
    required: false
    default: false
  deploy-updatesite:
    description: 'Updatesite for deployment. If empty deployment is skipped'
    required: false
    default: ''
  java-version:
    description: 'Java version for build. Default 11'
    required: false
    default: '11'
  SERVER_SSH_KEY:
    description: 'SSH Key for deployment'
    required: true
    default: ''
  REMOTE_HOST:
    description: 'Remote host ip'
    required: true
    default: ''
  REMOTE_PORT:
    description: 'Remote host port'
    required: true
    default: ''
  REMOTE_USER:
    description: 'Remote host user'
    required: true
    default: ''
  REMOTE_TARGET:
    description: 'Remote host target path'
    required: true
    default: ''

env:
  DEPLOY_FOLDER: ''
  REMOTE_PATH: ''

runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.build-repository }}
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.java-version }}
          cache: 'maven'
      - name: Verify with Maven
        shell: bash
        run: |
          if ${{ inputs.use-display-output }}; then
              DISPLAY=:0 mvn clean verify
          else
              mvn clean verify
          fi
      - name: Create folder name
        shell: bash
        run: echo "DEPLOY_FOLDER=$( ${{ inputs.build-repository }} | cut -d'/' -f2 | sed -e 's/\(.*\)/\L\1/' )" >> $GITHUB_ENV
      - name: Create Deployment Path
        shell: bash
        run: echo "REMOTE_PATH=$( '${{ inputs.REMOTE_TARGET}}/${{ env.DEPLOY_FOLDER }}/nightly' )" >> $GITHUB_ENV
      - name: SFTP Deploy
        uses: wlixcc/SFTP-Deploy-Action@v1.2.2
        with:
          username: ${{ inputs.REMOTE_USER }}
          server: ${{ inputs.REMOTE_HOST }}
          ssh_private_key: ${{ inputs.SERVER_SSH_KEY }}
          local_path: ${{ inputs.deploy-updatesite }}
          remote_path: ${{ env.REMOATE_PATH }}
          port: ${{ inputs.REMOTE_PORT }}
          args: '-o ConnectTimeout=5'  
          
